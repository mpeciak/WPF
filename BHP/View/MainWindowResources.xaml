<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:BHP.ViewModel"
                    xmlns:vw="clr-namespace:BHP.View">

    <!-- Polaczenie ViewModel z View -->
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <vw:NowyPracownikView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaPozycjaViewModel}">
        <vw:NowaPozycjaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweStanowiskoViewModel}">
        <vw:NoweStanowiskoView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyPracownicyViewModel}">
        <vw:WszyscyPracownicy/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyZwolnieniViewModel}">
        <vw:WszyscyZwolnienView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ZwolnieniePracownikaViewModel}">
        <vw:ZwolnieniePracownikaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaOdziezViewModel}">
        <vw:NowaOdziezView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NoweObowieViewModel}">
        <vw:NoweObowieView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFirmaViewModel}">
        <vw:NowaFirmaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <vw:WszyscyKontrahenciView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <vw:NowyKontrahentView/>
    </DataTemplate>
    <!-- Koniec polaczenia ViewModel z View -->

        <!-- Style sterujace wygladem komopnentow biznesowych aplikacji-->

    <!-- poczatek wlasnych styli-->

    <Style x:Key="ComboboxZwykly" TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="200"/>
    </Style>

    <!-- Style ComboBox -->
    <Style x:Key="ComboBoxZwykly" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="150"/>
    </Style>
    <Style x:Key="ComboBoxNieaktywny" TargetType="{x:Type ComboBox}" 
           BasedOn="{StaticResource ComboBoxZwykly}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    <!-- Koniec styli ComboBox -->
    <!-- Style TextBox -->
    <Style x:Key="TextBoxZwykly" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style x:Key="TextBoxNieaktywny" TargetType="{x:Type TextBox}" 
           BasedOn="{StaticResource TextBoxZwykly}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    <!-- Koniec styli TextBox -->
    <!-- Style Button -->
    <Style x:Key="ButtonZwykly" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <Style x:Key="ButtonCzerwony" TargetType="{x:Type Button}" 
           BasedOn="{StaticResource ButtonZwykly}">
        <Setter Property="Background" Value="Red"/>
    </Style>
    <Style x:Key="ButtonNieaktywny" TargetType="{x:Type Button}" 
           BasedOn="{StaticResource ButtonZwykly}">
        <Setter Property="IsEnabled" Value="False"/>
    </Style>
    <!-- Koniec styli Button -->
    <!-- Style StackPanel -->
    <Style x:Key="StackPanelZwykly" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="4"/>
    </Style>
    <Style x:Key="StackPanelZwyklyKon" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- Koniec styli StackPanel -->
    <!-- Style Border -->
    <Style x:Key="BorderAzurowy" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="BorderThickness" Value="0.5"/>
    </Style>
    <!-- Koniec styli Border -->
    <!-- Style RowDefinition -->
    <Style x:Key="RowDefinitionZwykly" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="28"/>
    </Style>
    <Style x:Key="RowDefinitionOdziezIObowie" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="150"/>
    </Style>
    <!--Koniec styli RowDefinition-->
    <!-- Style Label -->
    <Style x:Key="LabelZwykly" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--Koniec styli Label-->
    <!-- Style DatePicker -->
    <Style x:Key="DatePickerZwykly" TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="2"/>
    </Style>
    <!--Koniec styli DatePicker-->
    <!-- Style ToggleButton -->
    <Style x:Key="ToggleButtonZwykly" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
    </Style>
    <!--Koniec styli ToggleButton-->
    <!-- koniec wlasnych styli0-->


    <!-- Style sterujace wygladem okna glownego aplikacji-->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="Black" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>
</ResourceDictionary>